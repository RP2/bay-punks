---
import Layout from "../../layouts/Layout.astro";
import { Card } from "../../components/ui/card";
import { CardContent } from "../../components/ui/card";
import concerts from "../../data/calendar.json";

// get upcoming shows only
const today = new Date();
const todayISOString =
  today.getFullYear() +
  "-" +
  String(today.getMonth() + 1).padStart(2, "0") +
  "-" +
  String(today.getDate()).padStart(2, "0");

const upcomingShows = concerts.shows
  .filter((show) => show.normalizedDate >= todayISOString)
  .sort((a, b) => a.normalizedDate.localeCompare(b.normalizedDate))
  .map((show) => ({
    ...show,
    eventText: `${show.events.length} event${show.events.length !== 1 ? "s" : ""}`,
  }));
---

<Layout
  title="All Days"
  description="Browse all upcoming show dates in the Bay Area"
>
  <div class="container mx-auto px-4 py-8">
    <div class="mb-8">
      <a
        href="/"
        class="text-muted-foreground hover:text-foreground mb-4 inline-flex items-center text-sm hover:underline"
      >
        ‚Üê Back to calendar
      </a>
      <h1 class="text-4xl font-bold">All Days</h1>
      <p class="text-muted-foreground mt-2">
        Browse {upcomingShows.length} upcoming show dates in the Bay Area
      </p>
    </div>

    <div class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
      {
        upcomingShows.map((show) => (
          <Card>
            <CardContent className="p-4">
              <div class="space-y-2">
                <h3 class="font-semibold">
                  <a
                    href={`/day/${show.normalizedDate}/`}
                    class="text-primary hover:underline"
                  >
                    {show.day}
                  </a>
                </h3>
                <div class="text-muted-foreground text-sm">
                  {show.eventText}
                </div>
                <div class="text-muted-foreground text-xs">
                  {show.events.slice(0, 3).map((event, index) => (
                    <span>
                      {event.venue?.text}
                      {index < Math.min(2, show.events.length - 1) && ", "}
                    </span>
                  ))}
                  {show.events.length > 3 && (
                    <span> and {show.events.length - 3} more</span>
                  )}
                </div>
              </div>
            </CardContent>
          </Card>
        ))
      }
    </div>
  </div>
</Layout>
