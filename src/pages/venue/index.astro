---
import Layout from "../../layouts/Layout.astro";
import { Card } from "../../components/ui/card";
import { CardContent } from "../../components/ui/card";
import venues from "../../data/venues.json";
import concerts from "../../data/calendar.json";

// helper to normalize text (remove special characters, lowercase)
function normalizeText(text: string): string {
  return text
    .toLowerCase()
    .replace(/[^a-z0-9\s]/g, "")
    .trim();
}

// get upcoming shows only
const today = new Date();
const todayISOString =
  today.getFullYear() +
  "-" +
  String(today.getMonth() + 1).padStart(2, "0") +
  "-" +
  String(today.getDate()).padStart(2, "0");

// sort venues alphabetically and add upcoming shows count
const sortedVenues = venues.venues
  .map((venue) => {
    const upcomingShows = concerts.shows
      .filter((show) => show.normalizedDate >= todayISOString)
      .flatMap((show) =>
        show.events
          .filter((event) => {
            if (!event.venue) return false;

            // match by ID first (most reliable)
            if (event.venue.id === venue.id) return true;

            // match by normalized name
            if (
              event.venue.text &&
              normalizeText(event.venue.text) === normalizeText(venue.name)
            )
              return true;

            // match against venue aliases
            if (venue.aliases && Array.isArray(venue.aliases)) {
              return venue.aliases.some(
                (alias) =>
                  normalizeText(alias) ===
                  normalizeText(event.venue.text || ""),
              );
            }

            return false;
          })
          .map((event) => ({
            ...event,
            date: show.normalizedDate,
            humanDate: show.day,
          })),
      );

    return {
      ...venue,
      upcomingShows: upcomingShows.slice(0, 2), // show max 2 upcoming shows
      upcomingShowsCount: upcomingShows.length,
    };
  })
  .sort((a, b) => a.name.localeCompare(b.name));
---

<Layout
  title="All Venues"
  description="Browse all venues hosting shows in the Bay Area"
>
  <div class="container mx-auto px-4 py-8">
    <div class="mb-8">
      <a
        href="/"
        class="text-muted-foreground hover:text-foreground mb-4 inline-flex items-center text-sm hover:underline"
      >
        ← Back to calendar
      </a>
      <h1 class="text-4xl font-bold">All Venues</h1>
      <p class="text-muted-foreground mt-2">
        Browse {sortedVenues.length} venues hosting shows in the Bay Area
      </p>
    </div>

    <div class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
      {
        sortedVenues.map((venue) => (
          <Card>
            <CardContent className="p-4">
              <div class="space-y-2">
                <h3 class="font-semibold">
                  <a
                    href={`/venue/${venue.id}/`}
                    class="text-primary hover:underline"
                  >
                    {venue.name}
                  </a>
                </h3>
                {venue.location && (
                  <div class="text-muted-foreground text-sm">
                    {venue.location}
                  </div>
                )}
                {venue.upcomingShowsCount > 0 ? (
                  <div class="text-muted-foreground text-xs">
                    <div class="mb-1">
                      {venue.upcomingShowsCount} upcoming show
                      {venue.upcomingShowsCount !== 1 ? "s" : ""}
                    </div>
                    {venue.upcomingShows.map((show) => (
                      <div class="truncate">
                        {show.humanDate}
                        {show.bands && show.bands.length > 0 && (
                          <span> • {show.bands[0].text}</span>
                        )}
                        {show.bands && show.bands.length > 1 && (
                          <span> +{show.bands.length - 1} more</span>
                        )}
                      </div>
                    ))}
                  </div>
                ) : (
                  <div class="text-muted-foreground text-xs">
                    No upcoming shows
                  </div>
                )}
              </div>
            </CardContent>
          </Card>
        ))
      }
    </div>
  </div>
</Layout>
